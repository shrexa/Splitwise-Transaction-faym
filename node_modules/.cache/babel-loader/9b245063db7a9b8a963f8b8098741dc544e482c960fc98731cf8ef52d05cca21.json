{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\HP\\\\Documents\\\\GitHub\\\\Transactions\\\\src\\\\components\\\\TransactionList.js\";\nimport React from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { Card, ListGroup } from 'react-bootstrap';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction TransactionList({\n  transactions\n}) {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container mt-4\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"mb-4\",\n      children: \"Transaction List\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 7\n    }, this), transactions.length > 0 ? transactions.map((transaction, index) => /*#__PURE__*/_jsxDEV(Card, {\n      className: \"mb-3\",\n      children: [/*#__PURE__*/_jsxDEV(Card.Header, {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: transaction.payer\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 14,\n          columnNumber: 15\n        }, this), \" paid \\u20B9\", transaction.amount]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n        children: [/*#__PURE__*/_jsxDEV(Card.Text, {\n          children: [\"Participants: \", transaction.participants.join(', ')]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 15\n        }, this), transaction.splitMode === 'equal' ? /*#__PURE__*/_jsxDEV(Card.Text, {\n          children: \"Split equally\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 17\n        }, this) : /*#__PURE__*/_jsxDEV(Card.Text, {\n          children: [\"Custom Splits: \", Object.entries(transaction.customSplits).map(([participant, split]) => /*#__PURE__*/_jsxDEV(\"span\", {\n            children: [participant, \": \", split, \"%\", ' ']\n          }, participant, true, {\n            fileName: _jsxFileName,\n            lineNumber: 24,\n            columnNumber: 23\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 13\n      }, this)]\n    }, index, true, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 11\n    }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No transactions yet!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 5\n  }, this);\n}\n_c = TransactionList;\nexport default TransactionList;\nvar _c;\n$RefreshReg$(_c, \"TransactionList\");","map":{"version":3,"names":["React","Card","ListGroup","jsxDEV","_jsxDEV","TransactionList","transactions","className","children","fileName","_jsxFileName","lineNumber","columnNumber","length","map","transaction","index","Header","payer","amount","Body","Text","participants","join","splitMode","Object","entries","customSplits","participant","split","_c","$RefreshReg$"],"sources":["C:/Users/HP/Documents/GitHub/Transactions/src/components/TransactionList.js"],"sourcesContent":["import React from 'react';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\nimport { Card, ListGroup } from 'react-bootstrap';\r\n\r\nfunction TransactionList({ transactions }) {\r\n  return (\r\n    <div className=\"container mt-4\">\r\n      <h2 className=\"mb-4\">Transaction List</h2>\r\n      {transactions.length > 0 ? (\r\n        transactions.map((transaction, index) => (\r\n          <Card className=\"mb-3\" key={index}>\r\n            <Card.Header>\r\n              <strong>{transaction.payer}</strong> paid â‚¹{transaction.amount}\r\n            </Card.Header>\r\n            <Card.Body>\r\n              <Card.Text>Participants: {transaction.participants.join(', ')}</Card.Text>\r\n              {transaction.splitMode === 'equal' ? (\r\n                <Card.Text>Split equally</Card.Text>\r\n              ) : (\r\n                <Card.Text>\r\n                  Custom Splits: {Object.entries(transaction.customSplits).map(\r\n                    ([participant, split]) => (\r\n                      <span key={participant}>\r\n                        {participant}: {split}%{' '}\r\n                      </span>\r\n                    )\r\n                  )}\r\n                </Card.Text>\r\n              )}\r\n            </Card.Body>\r\n          </Card>\r\n        ))\r\n      ) : (\r\n        <p>No transactions yet!</p>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default TransactionList;\r\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAO,sCAAsC;AAE7C,SAASC,IAAI,EAAEC,SAAS,QAAQ,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElD,SAASC,eAAeA,CAAC;EAAEC;AAAa,CAAC,EAAE;EACzC,oBACEF,OAAA;IAAKG,SAAS,EAAC,gBAAgB;IAAAC,QAAA,gBAC7BJ,OAAA;MAAIG,SAAS,EAAC,MAAM;MAAAC,QAAA,EAAC;IAAgB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EACzCN,YAAY,CAACO,MAAM,GAAG,CAAC,GACtBP,YAAY,CAACQ,GAAG,CAAC,CAACC,WAAW,EAAEC,KAAK,kBAClCZ,OAAA,CAACH,IAAI;MAACM,SAAS,EAAC,MAAM;MAAAC,QAAA,gBACpBJ,OAAA,CAACH,IAAI,CAACgB,MAAM;QAAAT,QAAA,gBACVJ,OAAA;UAAAI,QAAA,EAASO,WAAW,CAACG;QAAK;UAAAT,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAS,CAAC,gBAAO,EAACG,WAAW,CAACI,MAAM;MAAA;QAAAV,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACnD,CAAC,eACdR,OAAA,CAACH,IAAI,CAACmB,IAAI;QAAAZ,QAAA,gBACRJ,OAAA,CAACH,IAAI,CAACoB,IAAI;UAAAb,QAAA,GAAC,gBAAc,EAACO,WAAW,CAACO,YAAY,CAACC,IAAI,CAAC,IAAI,CAAC;QAAA;UAAAd,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAY,CAAC,EACzEG,WAAW,CAACS,SAAS,KAAK,OAAO,gBAChCpB,OAAA,CAACH,IAAI,CAACoB,IAAI;UAAAb,QAAA,EAAC;QAAa;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAW,CAAC,gBAEpCR,OAAA,CAACH,IAAI,CAACoB,IAAI;UAAAb,QAAA,GAAC,iBACM,EAACiB,MAAM,CAACC,OAAO,CAACX,WAAW,CAACY,YAAY,CAAC,CAACb,GAAG,CAC1D,CAAC,CAACc,WAAW,EAAEC,KAAK,CAAC,kBACnBzB,OAAA;YAAAI,QAAA,GACGoB,WAAW,EAAC,IAAE,EAACC,KAAK,EAAC,GAAC,EAAC,GAAG;UAAA,GADlBD,WAAW;YAAAnB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAEhB,CAEV,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACQ,CACZ;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACQ,CAAC;IAAA,GAnBcI,KAAK;MAAAP,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAoB3B,CACP,CAAC,gBAEFR,OAAA;MAAAI,QAAA,EAAG;IAAoB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAC3B;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV;AAACkB,EAAA,GAjCQzB,eAAe;AAmCxB,eAAeA,eAAe;AAAC,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}